global !p

endglobal

# math snippets
snippet lm "line math environment" Aw
\$$1\$$0
endsnippet

snippet dlm "displaystyle line math environment" Aw
\$\displaystyle $1\$$0
endsnippet

snippet mm "multiple lines math environment" Aw
\$
$1
\$
$0
endsnippet

snippet dmm "displaystyle multiple lines math environment" Aw
\$\displaystyle
$1
\$
$0
endsnippet

snippet lcm "line center math environment" Aw
\$\$$1\$\$$0
endsnippet

snippet dlcm "displaystyle line center math environment" Aw
\$\$\displaystyle $1\$\$$0
endsnippet

snippet cmm "multiple lines center math environment" Aw
\$\$
$1
\$\$
$0
endsnippet

snippet dcmm "displaystyle multiple lines center math environment" Aw
\$\$\displaystyle
$1
\$\$
$0
endsnippet

context "math()"
snippet { "\{" iA
\{
endsnippet

context "math()"
snippet } "\}" iA
\}
endsnippet

context "math()"
snippet beg "begin() / end{}" bA
\begin{$1}
    $0
\end{$1}
endsnippet

context "math()"
snippet "([A-Za-z])(\d)" "auto subscript1" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet "([A-Za-z])_(\d\d)" "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet tb "A_{}" iA
_{$1}$0
endsnippet

context "math()"
snippet tp "A^{}" iA
^{$1}$0
endsnippet

# ========== Fraction ==========
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

# context "math()"
# snippet / "Fraction" iA
# \\frac{${VISUAL}}{$1}$0
# endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet 

# ========== unicode ==========
context "math()"
snippet "Apa" "\Alpha" wA
\Alpha
endsnippet

context "math()"
snippet apa "\alpha" wrA
\alpha
endsnippet

context "math()"
snippet "Beta" "\Beat" wrA
\Beta
endsnippet

context "math()"
snippet "Gma" "\Gamma" wrA
\Gamma
endsnippet

context "math()"
snippet "gma" "\gamma" wrA
\gamma
endsnippet

context "math()"
snippet "Dla" "\Delta" wrA
\Delta
endsnippet

context "math()"
snippet "dla" "\delta" wrA
\delta
endsnippet

context "math()"
snippet "Epl" "\Epsilon" wrA
\Epsilon
endsnippet

context "math()"
snippet "epl" "\epsilon" wrA
\epsilon
endsnippet

context "math()"
snippet "Zeta" "\Zeta" wrA
\Zeta
endsnippet

context "math()"
snippet "zeta" "\zeta" wrA
\zeta
endsnippet

context "math()"
snippet "Eta" "\Eta" wrA
\Eta
endsnippet

context "math()"
snippet "Tha" "\Theta" wrA
\Theta
endsnippet

context "math()"
snippet "tha" "\theta" wrA
\theta
endsnippet


# ========== math operators ==========
context "math()"
snippet "lim" "\lim" wrA
\lim_{$1->$2} $0
endsnippet



# ========== set ==========
context "math()"
snippet "eset" "\emptyset" wrA
\emptyset
endsnippet

context "math()"
snippet "bec" "\because" wrA
\because
endsnippet

context "math()"
snippet "so" "\therefore" wrA
\therefore
endsnippet

context "math()"
snippet "fall" "\forall" wrA
\forall
endsnippet

context "math()"
snippet "subset" "\subset" wrA
\subset
endsnippet

context "math()"
snippet "supset" "\supset" wrA
\supset
endsnippet

context "math()"
snippet "in" "\in" wrA
\in
endsnippet

context "math()"
snippet "noin" "\notin" wrA
\notin
endsnippet

context "math()"
snippet "ni" "\ni" wrA
\ni
endsnippet

context "math()"
snippet "notni" "\notni" wrA
\notni
endsnippet

# ========= calu ==========
context "math()"
snippet "sum" "\\\sum" wrA
\sum
endsnippet

context "math()"
snippet "prod" "\prod" wrA
\prod
endsnippet

# context "math()"
# snippet int "\int" wrA
# \int
# endsnippet

# ===== others =====
snippet sign "Signature"
<h6 style="text-align:right">
Yours sincerely
<br>
<br>
Baitwo02
</h6>
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

snippet "table(\d+)" "create a table" brA
$0`!p snip.rv = '|' + '<++>|' * int(match.group(1))`
`!p snip.rv = '|' + ':---|' * int(match.group(1))`
`!p snip.rv = '|' + '<++>|' * int(match.group(1))`
endsnippet
